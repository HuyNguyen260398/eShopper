@model PagedList.IPagedList<eShopper.Models.Product>
@using PagedList.Mvc;
@using eShopper.Models;

<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_Customer.cshtml";

    eShopperEntities db = new eShopperEntities();
}

<section id="advertisement">
    <div class="container">
        <img src="~/Template/Eshopper/images/shop/advertisement.jpg" alt="" />
    </div>
</section>

<section>
    <div class="container">
        <div class="row">
            <div class="col-sm-3">
                <div class="left-sidebar">
                    <h2>Category</h2>
                    <div class="panel-group category-products" id="accordian">
                        <!--category-products-->
                        @foreach (var item in (IEnumerable<eShopper.Models.Category>)ViewBag.Categories)
                        {
                            var count = db.Products.Where(a => a.Product_Category == item.Category_ID).ToList().Count();

                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title"><a href=@Url.Action("Index", "Product", new {category = item.Category_ID })><span class="pull-right">(@count)</span>@item.Category_Name</a></h4>
                                </div>
                            </div>
                        }
                    </div><!--/category-products-->

                    <div class="brands_products">
                        <!--brands_products-->
                        <h2>Brands</h2>
                        <div class="brands-name">
                            <ul class="nav nav-pills nav-stacked">
                                @foreach (var item in (IEnumerable<eShopper.Models.Brand>)ViewBag.Brands)
                                {
                                    var count = db.Products.Where(a => a.Product_Brand == item.Brand_ID).ToList().Count();

                                    <li><a href=@Url.Action("Index", "Product", new {brand = item.Brand_ID })><span class="pull-right">(@count)</span>@item.Brand_Name</a></li>
                                }
                            </ul>
                        </div>
                    </div><!--/brands_products-->

                    <div class="price-range">
                        <!--price-range-->
                        <h2>Price Range</h2>
                        <div class="well text-center">
                            <input type="text" class="span2" value="" data-slider-min="0" data-slider-max="600" data-slider-step="5" data-slider-value="[250,450]" id="sl2"><br />
                            <b class="pull-left">$ 0</b> <b class="pull-right">$ 600</b>
                        </div>
                    </div><!--/price-range-->

                    <div class="shipping text-center">
                        <!--shipping-->
                        <img src="~/Template/Eshopper/images/home/shipping.jpg" alt="" />
                    </div><!--/shipping-->

                </div>
            </div>

            <div class="col-sm-9 padding-right">
                <div class="features_items">
                    <!--features_items-->
                    <h2 class="title text-center">Features Items</h2>

                    @foreach (var item in Model)
                    {
                        <div class="col-sm-4">
                            <div class="product-image-wrapper">
                                <div class="single-products">
                                    <div class="productinfo text-center">
                                        <img src="@item.Product_Image" alt="" />
                                        <h2>$ @String.Format("{0:0,0}", item.Product_Price)</h2>
                                        <p>@item.Product_Name</p>
                                        <a href=@Url.Action("AddCart", "Cart", new { id = item.Product_ID, strURL = Request.Url.ToString() }) class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
                                    </div>
                                    <div class="product-overlay">
                                        <div class="overlay-content">
                                            <h2>$ @String.Format("{0:0,0}", item.Product_Price)</h2>
                                            <p>@item.Product_Name</p>
                                            <p><a href=@Url.Action("Details", "Product", new { id = item.Product_ID }) style="color:white">Details</a></p>
                                            <a href=@Url.Action("AddCart", "Cart", new { id = item.Product_ID, strURL = Request.Url.ToString() }) class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="choose">
                                    <ul class="nav nav-pills nav-justified">
                                        <li><a href=@Url.Action("AddWishList", "Cart", new { id = item.Product_ID, strURL = Request.Url.ToString() })><i class="fa fa-plus-square"></i>Add to wishlist</a></li>
                                        <li><a href=@Url.Action("AddCompareList", "Cart", new { id = item.Product_ID, strURL = Request.Url.ToString() })><i class="fa fa-plus-square"></i>Add to compare</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="col-sm-12">
                        <h6 style="color:#FFAD41">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</h6>

                        @Html.PagedListPager(Model, page_no => Url.Action("Index", new
                        {
                            page_no,
                            search = Request.QueryString["search"],
                            category = Request.QueryString["category"],
                            brand = Request.QueryString["brand"]
                        }),
                             new PagedListRenderOptions
                             {
                                 DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                 DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                 DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                 DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                 MaximumPageNumbersToDisplay = 3
                             })
                    </div>

                </div><!--features_items-->
            </div>
        </div>
    </div>
</section>



